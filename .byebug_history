c
serialized_data.as_json
serialized_data.resource
serialized_data
c
post
c
post.comments.include(:user)
post.comments
post
data
c
serialized_data
data
c
data["comments"]
data.comments
data
c
serializable_resource.as_json
serializable_resource.to_json
serializable_resource
c
data
post
c
serializable_resource.as_json
c
serializable_resource.as_json
c
serializable_resource.as_json
serializable_resource
c
ActiveModelSerializers::SerializableResource.new(post, {}).serializer
ActiveModelSerializers::SerializableResource.new(post, {}).as_json
ActiveModelSerializers::SerializableResource.new(post, {})
ActiveModel::Serializer.serializer_for(post, {})
c
post
render json: post, serializer: PostSerializer
render json: user, serializer: PostSerializer
render post
render json: post
render :json post
c
kc
post.seralized
post
self.new.get
self
post
kpost
c
user
c
result
c
result
c
result
c
current_user.voted_for? user
c
user1
comment
result
c
user.posts.second.comments
comment
result
user.posts.second
comment
c
comment
c
comment
c
result.dig(:data, :user)
result.dig(:data, :user
result.dig('data', 'user')
c
result
c
result
c
result
c
post
abc = Post.includes(:user).find(1).as_json(include: :user)
abc = Post.includes(:user).find(1).include(:user)
abc = Post.includes(:user).find(1)
post.includes(:user)
